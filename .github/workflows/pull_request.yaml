---
name: Pulp PR
on: pull_request
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # For PRs, to save GHA resources, only run on 1 python version
      # Also, have the pip modes focus on as many different python
      # versions as possible, package mode can be just 1 version.
      matrix:
        include:
          - env:
              TEST_TYPE: release-static
            python: "2.7"
          - env:
              TEST_TYPE: source-static
            python: "2.7"
          - env:
              TEST_TYPE: release-dynamic
            python: "3.6"
          - env:
              TEST_TYPE: source-dynamic
            python: "3.6"
          - env:
              TEST_TYPE: packages-static
            python: "3.7"
          - env:
              TEST_TYPE: packages-dynamic
            python: "3.7"
          - env:
              TEST_TYPE: packages-upgrade
            python: "3.7"
          - env:
              TEST_TYPE: release-upgrade
            python: "3.8"
          - env:
              TEST_TYPE: source-upgrade
            python: "3.8"
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Install yq
        run: |
          sudo add-apt-repository --yes ppa:rmescandon/yq
          sudo apt update
          sudo apt install yq -y
      - name: Enable/Disable pulp-rpm tests
        env:
          DISABLE_PULP_RPM_TEST: ${{ secrets.DISABLE_PULP_RPM_TEST }}
        run: |
          echo $DISABLE_PULP_RPM_TEST
          if [[ "$DISABLE_PULP_RPM_TEST" == "true" ]]; then
            find ./molecule/*/group_vars/all -exec sh -c "yq d -i {} pulp_install_plugins.pulp-rpm" \;
            find ./molecule/*/group_vars/all -exec sh -c "echo; echo {}; cat {}" \;
            docker pull quay.io/pulp/pulp-ci-c7:3.0.0
            docker pull quay.io/pulp/pulp-ci-f31:3.0.0
            find ./molecule/*/molecule.yml -exec sed -i 's/pulp_rpm-ci-c7:3.1.0/pulp-ci-c7:3.0.0/g' {} \;
            find ./molecule/*/molecule.yml -exec sed -i 's/pulp_rpm-ci-f31:3.1.0/pulp-ci-f31:3.0.0/g' {} \;
          fi
        shell: bash
      - name: Install tox
        run: |
          pip install --upgrade pip
          pip install tox requests
      - name: Check commit message
        env:
          GITHUB_CONTEXT: ${{ github.event.pull_request.commits_url }}
        run: |
          for sha in $(curl $GITHUB_CONTEXT | jq '.[].sha' | sed 's/"//g')
          do
            python .github/validate_commit_message.py $sha
            VALUE=$?
            if [ "$VALUE" -gt 0 ]; then
              exit $VALUE
            fi
          done
        shell: bash
      - name: Set tox env for python 27
        if: matrix.python == '2.7'
        run: echo "::set-env name=TOXENV::py27-${{ matrix.env.TEST_TYPE }}"
      - name: Set tox env for python 36
        if: matrix.python == '3.6'
        run: echo "::set-env name=TOXENV::py36-${{ matrix.env.TEST_TYPE }}"
      - name: Set tox env for python 37
        if: matrix.python == '3.7'
        run: echo "::set-env name=TOXENV::py37-${{ matrix.env.TEST_TYPE }}"
      - name: Set tox env for python 38
        if: matrix.python == '3.8'
        run: echo "::set-env name=TOXENV::py38-${{ matrix.env.TEST_TYPE }}"
      - name: Pulling images for PyPI upgrades
        if: matrix.env.TEST_TYPE == 'release-upgrade' || matrix.env.TEST_TYPE == 'source-upgrade'
        run: |
          docker pull quay.io/pulp/pulp-ci-dbuster:3.0.0
          docker pull quay.io/pulp/pulp_rpm-ci-f31:3.1.0
          docker pull quay.io/pulp/pulp_rpm-ci-c7:3.1.0
      - name: Pulling images for distro packages upgrades
        if: matrix.env.TEST_TYPE == 'packages-upgrade'
        run: |
          docker pull quay.io/pulp/pulp-ci-pkgs-c7:3.3.1
          docker pull quay.io/pulp/pulp-ci-pkgs-c8:3.3.1
      - name: Run tox
        run: |
          tox && exit 0 || true
          sleep 45
          tox
        env:
          TEST_TYPE: ${{ matrix.env.TEST_TYPE }}
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
        shell: bash
